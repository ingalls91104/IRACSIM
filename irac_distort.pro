PRO IRAC_DISTORT,uin,vin,channel,uadjusted,vadjusted,REVERSE=reverse,ORDER5=order5
;;
;;  Distort UIN and VIN pixel positions for IRAC measurements.  In normal usage, input actual u and v positions using a 
;;  linear pixel scale and return adjusted, as-measured values.
;;  Set keyword /REVERSE if you want to UN-distort measured positions (u,v) to the linear pixel scale.
;;  Inputs can be scalars or arrays. Results are in UADJUSTED,VADJUSTED, with the same number of elements as the inputs.  
;;  Input the Channel number.  Positions are with respect to the IRAC full array.
;;
;;  Keyword /ORDER5 enables the 5th order distortion coefficients.  Default is 3rd order 
;; 
;

IF KEYWORD_SET(ORDER5) THEN BEGIN
   IF CHANNEL EQ 1 OR CHANNEL EQ '1' THEN BEGIN
     h = HASH('CD',[ [-0.000339817306408d0,0],[0,0.000339800986694d0]],'CRPIX1',128.0,'CRPIX2',128.0,$
       'PXSCAL1',-1.22334117768332d0,'PXSCAL2',1.22328355209902d0,'A_ORDER',5,$
       'A',[[0.0000000,0.0000000,8.1311900d-06,-1.8893300e-07,5.0770200e-10,1.5086600e-12],$
            [0.0000000,2.4064300e-05,4.0280900e-10,2.4267900e-10,1.1535800e-12,0.0000000],$
            [-9.8946200e-06,-2.9159800e-07,6.2509700e-10,2.9336800e-12,0.0000000,0.0000000],$
            [-9.7598300e-10,3.2127000e-10,-2.7055000e-13,0.0000000,0.0000000,0.0000000],$
            [5.4497200e-10,6.7142700e-12,0.0000000,0.0000000,0.0000000,0.0000000],$
            [1.0202100e-12,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000]],$
       'B_ORDER',5,$
       'B',[[0.0000000,0.0000000,-1.5221700d-05,6.4677400e-08,9.4715800e-10,-2.2383200e-12],$
            [0.0000000,1.3570300e-05,-2.4016300e-07,2.6635300e-10,3.0755200e-12,0.0000000],$
            [1.2999200e-05,-5.3763800e-08,1.0572400e-09,1.5617900e-12,0.0000000,0.0000000],$
            [-2.2150000e-07,2.1139200e-10,4.6446800e-12,0.0000000,0.0000000,0.0000000],$
            [1.0990200e-09,5.5331800e-12,0.0000000,0.0000000,0.0000000,0.0000000],$
            [2.6864000e-12,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000]],$
      'AP_ORDER',5,$
      'AP',[[0.0000000,-0.00013037900d0,-8.0558600e-06,2.1373500e-07,-5.2784800e-10,-2.5034200e-12],$
            [-0.00026521100,-2.4020000e-05,-1.5722200e-08,-2.6003600e-10,-1.7818000e-12,0.0000000],$
            [1.0079100e-05,3.0467700e-07,-6.4675100e-10,-3.3222300e-12,0.0000000,0.0000000],$
            [5.2722800e-08,-3.5073900e-10,1.4775400e-12,0.0000000,0.0000000,0.0000000],$
            [-5.6205100e-10,-6.9291200e-12,0.0000000,0.0000000,0.0000000,0.0000000],$
            [-3.4235900e-12,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000]],$
      'BP_ORDER',5,$
      'BP',[[0.0000000,-0.00023757700,1.5334300e-05,1.1084300e-07,-9.5985300e-10,-5.6323800e-12],$
            [-0.00093497500,-1.3482900e-05,2.5290400e-07,-2.5963500e-10,-2.8533900e-12,0.0000000],$
            [-1.2668300e-05,1.4854200e-07,-1.0830900e-09,-6.5974300e-12,0.0000000,0.0000000],$
            [2.7006800e-07,-2.2795600e-10,-5.2197400e-12,0.0000000,0.0000000,0.0000000],$
            [-1.1607900e-09,-8.5568700e-12,0.0000000,0.0000000,0.0000000,0.0000000],$
            [-4.7432700e-12,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000]] )
   ENDIF ELSE BEGIN
     h = HASH('CD',[[ -0.000337893992738d0,0],[0,0.000337737990776d0]],'CRPIX1',128.0,'CRPIX2',128.0,$
       'PXSCAL1',-1.21641835430637d0,'PXSCAL2',1.21585676679388d0,'A_ORDER',5,'B_ORDER',5,$
       'A',[[0.0000000,0.0000000,8.1311900d-06,-1.8893300e-07,5.0770200e-10,1.5086600e-12],$
            [0.0000000,2.4064300e-05,4.0280900e-10,2.4267900e-10,1.1535800e-12,0.0000000],$
            [-9.8946200e-06,-2.9159800e-07,6.2509700e-10,2.9336800e-12,0.0000000,0.0000000],$
            [-9.7598300e-10,3.2127000e-10,-2.7055000e-13,0.0000000,0.0000000,0.0000000],$
            [5.4497200e-10,6.7142700e-12,0.0000000,0.0000000,0.0000000,0.0000000],$
            [1.0202100e-12,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000]],$
       'B_ORDER',5,$
       'B',[[0.0000000,0.0000000,-1.5221700d-05,6.4677400e-08,9.4715800e-10,-2.2383200e-12],$
            [0.0000000,1.3570300e-05,-2.4016300e-07,2.6635300e-10,3.0755200e-12,0.0000000],$
            [1.2999200e-05,-5.3763800e-08,1.0572400e-09,1.5617900e-12,0.0000000,0.0000000],$
            [-2.2150000e-07,2.1139200e-10,4.6446800e-12,0.0000000,0.0000000,0.0000000],$
            [1.0990200e-09,5.5331800e-12,0.0000000,0.0000000,0.0000000,0.0000000],$
            [2.6864000e-12,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000]],$
      'AP_ORDER',5,$
      'AP',[[0.0000000,-0.00013037900d0,-8.0558600e-06,2.1373500e-07,-5.2784800e-10,-2.5034200e-12],$
            [-0.00026521100,-2.4020000e-05,-1.5722200e-08,-2.6003600e-10,-1.7818000e-12,0.0000000],$
            [1.0079100e-05,3.0467700e-07,-6.4675100e-10,-3.3222300e-12,0.0000000,0.0000000],$
            [5.2722800e-08,-3.5073900e-10,1.4775400e-12,0.0000000,0.0000000,0.0000000],$
            [-5.6205100e-10,-6.9291200e-12,0.0000000,0.0000000,0.0000000,0.0000000],$
            [-3.4235900e-12,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000]],$
      'BP_ORDER',5,$
      'BP',[[0.0000000,-0.00023757700,1.5334300e-05,1.1084300e-07,-9.5985300e-10,-5.6323800e-12],$
            [-0.00093497500,-1.3482900e-05,2.5290400e-07,-2.5963500e-10,-2.8533900e-12,0.0000000],$
            [-1.2668300e-05,1.4854200e-07,-1.0830900e-09,-6.5974300e-12,0.0000000,0.0000000],$
            [2.7006800e-07,-2.2795600e-10,-5.2197400e-12,0.0000000,0.0000000,0.0000000],$
            [-1.1607900e-09,-8.5568700e-12,0.0000000,0.0000000,0.0000000,0.0000000],$
            [-4.7432700e-12,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000]] )
   ENDELSE
ENDIF ELSE BEGIN
   IF CHANNEL EQ 1 OR CHANNEL EQ '1' THEN BEGIN
      h = HASH('CD',[ [-0.000339817306408d0,0],[0,0.000339800986694d0]],'CRPIX1',128.0,'CRPIX2',128.0,$
          'PXSCAL1',-1.22334117768332d0,'PXSCAL2',1.22328355209902d0,'A_ORDER',3,$
          'A',TRANSPOSE([[0,0,2.9656d-06,3.7746E-09],[0,2.1886E-05,-1.6847E-07,0],[-2.3863E-05,-8.561E-09,0,0],[-1.4172E-07,0,0,0]]),$
          'A_DMAX',1.394,'B_ORDER',3,'B_DMAX',1.501,$
          'B',TRANSPOSE([[0,0, 2.31d-05,3.7746E-09],[0,-2.4386E-05,-5.7813E-09,0],[2.1197E-06,-1.6583E-07,0,0],[-2.0249E-08,0,0,0]]),$
         'AP_ORDER',3,'BP_ORDER',3,$
         'AP',TRANSPOSE([[0,-6.4275d-07,-2.9425E-06,-3.582E-09],[-1.4897E-05,-2.225E-05,1.7195E-07,0],[2.4146E-05,6.709E-09,0,0],[1.4492E-07,0,0,0]]),$
         'BP',TRANSPOSE([[0,-1.6588d-05,-2.3424E-05,1.651E-07],[-2.6783E-06,2.4753E-05,3.8917E-09,0],[-2.151E-06,1.7E-07,0,0],[2.0482E-08,0,0,0]]))
   ENDIF ELSE BEGIN
      h = HASH('CD',[[ -0.000337893992738d0,0],[0,0.000337737990776d0]],'CRPIX1',128.0,'CRPIX2',128.0,$
         'PXSCAL1',-1.21641835430637d0,'PXSCAL2',1.21585676679388d0,'A_ORDER',3,'A_DMAX',1.645,'B_ORDER',3,'B_DMAX',1.738,$
         'A',TRANSPOSE([[0,0,1.0582d-08,-3.0831E-09],[0,3.0188E-05,-1.8817E-07,0],[1.9063E-05,6.5975E-09,0,0],[-1.8531E-07,0,0,0]]),$
         'B',TRANSPOSE([[0,0, 3.4386d-05,-1.7897E-07],[0,1.8781E-05,3.7246E-09,0],[3.7734E-06,-1.7747E-07,0,0],[-5.2103E-10,0,0,0]]),$
         'AP_ORDER',3,'BP_ORDER',3,$
         'AP',TRANSPOSE([[0,5.0237d-07,-5.1645E-08,3.0939E-09],[-2.1471E-05,-3.0796E-05,1.9379E-07,0],[-1.9359E-05,-4.4162E-09,0,0],[1.8929E-07,0,0,0]]),$
         'BP',TRANSPOSE([[0,-1.997d-05,-3.491E-05,1.8428E-07],[5.83E-07,-1.9129E-05,-1.2856E-09,0],[-3.8713E-06,1.821E-07,0,0],[7.0846E-10,0,0,0]]))
   ENDELSE
ENDELSE

U = uin - h['CRPIX1'] 
V = vin - h['CRPIX2'] 
               
IF ~Keyword_SET(REVERSE) THEN BEGIN
;   xdeg = (uin - h['CRPIX1']) * h['PXSCAL1']/3600. 
;   ydeg = (vin - h['CRPIX2']) * h['PXSCAL2']/3600.
;   CD_Inverse = 1./h['CD']  ;;; CD matrix is diagonal only, so matrix inverse is just the reciprocal of the entries
   DELTAU = POLY_2VAR(U,V,h['AP'])
   DELTAV = POLY_2VAR(U,V,h['BP'])
ENDIF ELSE BEGIN
   DELTAU = POLY_2VAR(u,v,h['A'])  
   DELTAV = POLY_2VAR(u,v,h['B']) 
ENDELSE
IF h.HasKey('A_DMAX') THEN BEGIN
   ioverU = WHERE(ABS(DELTAU) GT h['A_DMAX'],noveru)
   IF noveru NE 0 THEN DELTAU[ioverU] = h['A_DMAX'] * sign(DELTAU[ioverU])
ENDIF
IF h.HasKey('B_DMAX') THEN BEGIN
   ioverV = WHERE(ABS(DELTAV) GT h['B_DMAX'],noverv)
   IF noverv NE 0 THEN DELTAV[ioverV] = h['B_DMAX'] * sign(DELTAV[ioverV])
ENDIF
   
uadjusted = DELTAU + U + h['CRPIX1']
vadjusted = DELTAV + V + h['CRPIX2']

RETURN
END
